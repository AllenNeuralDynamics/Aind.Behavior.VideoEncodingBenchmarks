//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace AindVideoEncodingBenchmarksSchemas.TaskLogic
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.3.0.0 (Newtonsoft.Json v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class AindVideoEncodingBenchmarksTaskParameters
    {
    
        private double? _rngSeed;
    
        private string _aindBehaviorServicesPkgVersion = "0.8.8";
    
        private bool _saveRawVideo = false;
    
        public AindVideoEncodingBenchmarksTaskParameters()
        {
        }
    
        protected AindVideoEncodingBenchmarksTaskParameters(AindVideoEncodingBenchmarksTaskParameters other)
        {
            _rngSeed = other._rngSeed;
            _aindBehaviorServicesPkgVersion = other._aindBehaviorServicesPkgVersion;
            _saveRawVideo = other._saveRawVideo;
        }
    
        /// <summary>
        /// Seed of the random number generator
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonPropertyAttribute("rng_seed")]
        [System.ComponentModel.DescriptionAttribute("Seed of the random number generator")]
        public double? RngSeed
        {
            get
            {
                return _rngSeed;
            }
            set
            {
                _rngSeed = value;
            }
        }
    
        [Newtonsoft.Json.JsonPropertyAttribute("aind_behavior_services_pkg_version")]
        public string AindBehaviorServicesPkgVersion
        {
            get
            {
                return _aindBehaviorServicesPkgVersion;
            }
            set
            {
                _aindBehaviorServicesPkgVersion = value;
            }
        }
    
        /// <summary>
        /// For each video-writer object, will also save the RAW encoded video to disk. Use at your own risk.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("save_raw_video")]
        [System.ComponentModel.DescriptionAttribute("For each video-writer object, will also save the RAW encoded video to disk. Use a" +
            "t your own risk.")]
        public bool SaveRawVideo
        {
            get
            {
                return _saveRawVideo;
            }
            set
            {
                _saveRawVideo = value;
            }
        }
    
        public System.IObservable<AindVideoEncodingBenchmarksTaskParameters> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new AindVideoEncodingBenchmarksTaskParameters(this)));
        }
    
        public System.IObservable<AindVideoEncodingBenchmarksTaskParameters> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new AindVideoEncodingBenchmarksTaskParameters(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("rng_seed = " + _rngSeed + ", ");
            stringBuilder.Append("aind_behavior_services_pkg_version = " + _aindBehaviorServicesPkgVersion + ", ");
            stringBuilder.Append("save_raw_video = " + _saveRawVideo);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.3.0.0 (Newtonsoft.Json v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class AindVideoEncodingBenchmarksTaskLogic
    {
    
        private string _name = "AindVideoEncodingBenchmarks";
    
        private string _description = "";
    
        private AindVideoEncodingBenchmarksTaskParameters _taskParameters = new AindVideoEncodingBenchmarksTaskParameters();
    
        private string _version = "0.1.1";
    
        private string _stageName;
    
        public AindVideoEncodingBenchmarksTaskLogic()
        {
        }
    
        protected AindVideoEncodingBenchmarksTaskLogic(AindVideoEncodingBenchmarksTaskLogic other)
        {
            _name = other._name;
            _description = other._description;
            _taskParameters = other._taskParameters;
            _version = other._version;
            _stageName = other._stageName;
        }
    
        /// <summary>
        /// Name of the task logic
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        [System.ComponentModel.DescriptionAttribute("Name of the task logic")]
        public string Name
        {
            get
            {
                return _name;
            }
            set
            {
                _name = value;
            }
        }
    
        /// <summary>
        /// Description of the task.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        [System.ComponentModel.DescriptionAttribute("Description of the task.")]
        public string Description
        {
            get
            {
                return _description;
            }
            set
            {
                _description = value;
            }
        }
    
        /// <summary>
        /// Parameters of the task logic
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonPropertyAttribute("task_parameters", Required=Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DescriptionAttribute("Parameters of the task logic")]
        public AindVideoEncodingBenchmarksTaskParameters TaskParameters
        {
            get
            {
                return _taskParameters;
            }
            set
            {
                _taskParameters = value;
            }
        }
    
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public string Version
        {
            get
            {
                return _version;
            }
            set
            {
                _version = value;
            }
        }
    
        /// <summary>
        /// Optional stage name the `Task` object instance represents.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stage_name")]
        [System.ComponentModel.DescriptionAttribute("Optional stage name the `Task` object instance represents.")]
        public string StageName
        {
            get
            {
                return _stageName;
            }
            set
            {
                _stageName = value;
            }
        }
    
        public System.IObservable<AindVideoEncodingBenchmarksTaskLogic> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new AindVideoEncodingBenchmarksTaskLogic(this)));
        }
    
        public System.IObservable<AindVideoEncodingBenchmarksTaskLogic> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new AindVideoEncodingBenchmarksTaskLogic(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("name = " + _name + ", ");
            stringBuilder.Append("description = " + _description + ", ");
            stringBuilder.Append("task_parameters = " + _taskParameters + ", ");
            stringBuilder.Append("version = " + _version + ", ");
            stringBuilder.Append("stage_name = " + _stageName);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    /// <summary>
    /// Serializes a sequence of data model objects into JSON strings.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.3.0.0 (Newtonsoft.Json v13.0.0.0)")]
    [System.ComponentModel.DescriptionAttribute("Serializes a sequence of data model objects into JSON strings.")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Transform)]
    public partial class SerializeToJson
    {
    
        private System.IObservable<string> Process<T>(System.IObservable<T> source)
        {
            return System.Reactive.Linq.Observable.Select(source, value => Newtonsoft.Json.JsonConvert.SerializeObject(value));
        }

        public System.IObservable<string> Process(System.IObservable<AindVideoEncodingBenchmarksTaskParameters> source)
        {
            return Process<AindVideoEncodingBenchmarksTaskParameters>(source);
        }

        public System.IObservable<string> Process(System.IObservable<AindVideoEncodingBenchmarksTaskLogic> source)
        {
            return Process<AindVideoEncodingBenchmarksTaskLogic>(source);
        }
    }


    /// <summary>
    /// Deserializes a sequence of JSON strings into data model objects.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.3.0.0 (Newtonsoft.Json v13.0.0.0)")]
    [System.ComponentModel.DescriptionAttribute("Deserializes a sequence of JSON strings into data model objects.")]
    [System.ComponentModel.DefaultPropertyAttribute("Type")]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Transform)]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<AindVideoEncodingBenchmarksTaskParameters>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<AindVideoEncodingBenchmarksTaskLogic>))]
    public partial class DeserializeFromJson : Bonsai.Expressions.SingleArgumentExpressionBuilder
    {
    
        public DeserializeFromJson()
        {
            Type = new Bonsai.Expressions.TypeMapping<AindVideoEncodingBenchmarksTaskLogic>();
        }

        public Bonsai.Expressions.TypeMapping Type { get; set; }

        public override System.Linq.Expressions.Expression Build(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments)
        {
            var typeMapping = (Bonsai.Expressions.TypeMapping)Type;
            var returnType = typeMapping.GetType().GetGenericArguments()[0];
            return System.Linq.Expressions.Expression.Call(
                typeof(DeserializeFromJson),
                "Process",
                new System.Type[] { returnType },
                System.Linq.Enumerable.Single(arguments));
        }

        private static System.IObservable<T> Process<T>(System.IObservable<string> source)
        {
            return System.Reactive.Linq.Observable.Select(source, value => Newtonsoft.Json.JsonConvert.DeserializeObject<T>(value));
        }
    }
}